package werkplaats;import java.awt.BorderLayout;import java.awt.GridLayout;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import javax.swing.JButton;import javax.swing.JComboBox;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JOptionPane;import javax.swing.JPanel;import javax.swing.JTextField;import domeinklassen.Bedrijf;import domeinklassen.GebruiktProduct;import domeinklassen.Klus;import domeinklassen.Product;public class WerkzaamhedenWerkplaatsFrame extends JFrame implements ActionListener{	private JButton b1,b2,b3;	private JComboBox bx;	private JTextField tf1,tf2;	private JLabel lab1,labx;	private Bedrijf bedrijf;	private WerkplaatsFrame werkplaatsframe;	private Product hetProduct;	private Klus deKlus;	public WerkzaamhedenWerkplaatsFrame(WerkplaatsFrame wf,Bedrijf b, Klus k){		werkplaatsframe = wf;		bedrijf = b;		deKlus = k;		setLayout(new GridLayout(3,2));		JPanel hulpPaneel = new JPanel();		bx = new JComboBox();		for (Product p : bedrijf.getDeVoorraad()){			bx.addItem(p.getNaam());		}		hulpPaneel.add(bx);		bx.addActionListener(this);		labx = new JLabel("Aantal"); hulpPaneel.add(labx);		tf1 = new JTextField(2); hulpPaneel.add(tf1);		b1 = new JButton("Onderdeel toevoegen"); hulpPaneel.add(b1);		b1.addActionListener(this);		add(hulpPaneel, BorderLayout.NORTH);		JPanel zuidPaneel = new JPanel();		lab1 = new JLabel("Totaal gewerkte uren " + deKlus.getManuren()); zuidPaneel.add(lab1);		tf2 = new JTextField(2); zuidPaneel.add(tf2);		b3 = new JButton("Manuren toevoegen"); zuidPaneel.add(b3);		b3.addActionListener(this);		add(zuidPaneel, BorderLayout.CENTER);		b2 = new JButton("Sluit");		add(b2, BorderLayout.SOUTH);		b2.addActionListener(this);		pack(); setTitle("Status");		setDefaultCloseOperation(EXIT_ON_CLOSE);		onSelectedItemChanged();	}	public void onSelectedItemChanged() {		Object obj = bx.getSelectedItem();		String geselecteerde = (String)obj;		for(Product p : bedrijf.getDeVoorraad()){			if(p.getNaam().equalsIgnoreCase(geselecteerde)){				hetProduct = p;			}		}	}	public void actionPerformed(ActionEvent e){		if (e.getSource() == b1) {			if(tf1.getText() == null){				JOptionPane.showMessageDialog(null, "Niks ingevuld", "Error!", JOptionPane.PLAIN_MESSAGE);			}			else if (!tf1.getText().matches("((-|\\+)?[0-9]+(\\.[0-9]+)?)+")){				JOptionPane.showMessageDialog(null, "Geen getal", "Error!", JOptionPane.PLAIN_MESSAGE);			}			else {				GebruiktProduct g = new GebruiktProduct(Integer.parseInt(tf1.getText()),hetProduct);				deKlus.addGebruiktProduct(g);				String s = "Alle gebruikte onderdelen";				for (GebruiktProduct gp : deKlus.getGebruikteProducten()){					s = s + "\n" + gp.toString(bedrijf.getBTW());				}				JOptionPane.showMessageDialog(null,s, "GREAT SUCCES", JOptionPane.PLAIN_MESSAGE);			}		}		else if (e.getSource() == b2) {			werkplaatsframe.setVisible(true);			this.dispose();		}		else if (e.getSource() == b3){			//manuren uit tf2 halen en toevoegen aan manuren in de klus			if (!tf2.getText().matches("((-|\\+)?[0-9]+(\\.[0-9]+)?)+")){							JOptionPane.showMessageDialog(null, "Geen getal", "Error!", JOptionPane.PLAIN_MESSAGE);			}			else{				deKlus.addManuren(Integer.parseInt(tf2.getText()));				String manuren = ""+ deKlus.getManuren();				JOptionPane.showMessageDialog(null, "Bestede uren: " + manuren, "Manuren!", JOptionPane.PLAIN_MESSAGE);				// redraw werkzaamheden werkplaatsframe om uren te updaten				//WerkzaamhedenWerkplaatsFrame.repaint();				lab1.setText("Totaal gewerkte uren " + deKlus.getManuren());				tf2.setText("");			}		}		if (e.getSource() == bx){				onSelectedItemChanged();		}	}}